apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-03-18T19:05:19Z"
    generateName: coredns-78fcd69978-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 78fcd69978
    name: coredns-78fcd69978-bwk5w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-78fcd69978
      uid: 991c97fa-1b8e-4253-b65c-1bf2872e138b
    resourceVersion: "1258087"
    uid: fc22e661-e157-4e19-84d7-a916276e078f
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns/coredns:v1.8.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hz2pm
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: docker-desktop
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-hz2pm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://9cef5ea4417fe21334aebfbeb924fdcac85e985b4ee7e2a4751c7824231e88f4
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-coredns:v1.8.4
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-coredns@sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890
      lastState:
        terminated:
          containerID: docker://e3f98eeff2b34fe897efbf569533c1c0eb6a54f77e0b04607137a90b0f205daf
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:22Z"
      name: coredns
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:59Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.28
    podIPs:
    - ip: 10.1.0.28
    qosClass: Burstable
    startTime: "2022-03-18T19:05:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-03-18T19:05:19Z"
    generateName: coredns-78fcd69978-
    labels:
      k8s-app: kube-dns
      pod-template-hash: 78fcd69978
    name: coredns-78fcd69978-p2qrp
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-78fcd69978
      uid: 991c97fa-1b8e-4253-b65c-1bf2872e138b
    resourceVersion: "1258119"
    uid: a7c0cd5f-df43-4105-8360-050c44138f10
  spec:
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      image: k8s.gcr.io/coredns/coredns:v1.8.4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - all
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jz7lj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: docker-desktop
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-jz7lj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://2d8a661426b23d55ad24438fa95732407719996a7290fc8e1ab497e96555c178
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-coredns:v1.8.4
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-coredns@sha256:6e5a02c21641597998b4be7cb5eb1e7b02c0d8d23cce4dd09f4682d463798890
      lastState:
        terminated:
          containerID: docker://cb931444aae784891a9a7739ae0432bbf7b62542ba4a7ffc0a969d24ecf0c0ae
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:23Z"
      name: coredns
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:58Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.26
    podIPs:
    - ip: 10.1.0.26
    qosClass: Burstable
    startTime: "2022-03-18T19:05:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.65.4:2379
      kubernetes.io/config.hash: e5422d6ad441651609153d62d1ad42f6
      kubernetes.io/config.mirror: e5422d6ad441651609153d62d1ad42f6
      kubernetes.io/config.seen: "2022-03-18T19:05:09.112669524Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-03-18T19:05:21Z"
    labels:
      component: etcd
      tier: control-plane
    name: etcd-docker-desktop
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: docker-desktop
      uid: 0513d239-83ff-4020-ad23-3d84cffcae09
    resourceVersion: "1258104"
    uid: 6abc58d0-530c-477f-b520-3887ea07c94e
  spec:
    containers:
    - command:
      - etcd
      - --advertise-client-urls=https://192.168.65.4:2379
      - --cert-file=/run/config/pki/etcd/server.crt
      - --client-cert-auth=true
      - --data-dir=/var/lib/etcd
      - --initial-advertise-peer-urls=https://192.168.65.4:2380
      - --initial-cluster=docker-desktop=https://192.168.65.4:2380
      - --key-file=/run/config/pki/etcd/server.key
      - --listen-client-urls=https://127.0.0.1:2379,https://192.168.65.4:2379
      - --listen-metrics-urls=http://127.0.0.1:2381
      - --listen-peer-urls=https://192.168.65.4:2380
      - --name=docker-desktop
      - --peer-cert-file=/run/config/pki/etcd/peer.crt
      - --peer-client-cert-auth=true
      - --peer-key-file=/run/config/pki/etcd/peer.key
      - --peer-trusted-ca-file=/run/config/pki/etcd/ca.crt
      - --snapshot-count=10000
      - --trusted-ca-file=/run/config/pki/etcd/ca.crt
      image: k8s.gcr.io/etcd:3.5.0-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /health
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/etcd
        name: etcd-data
      - mountPath: /run/config/pki/etcd
        name: etcd-certs
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /run/config/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://0ddcaf4ec9f8575176c4ac3556f1d581ccbb7b6e4efef4d478b23a60c15393bc
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-etcd:3.5.0-0
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-etcd@sha256:9ce33ba33d8e738a5b85ed50b5080ac746deceed4a7496c550927a7a19ca3b6d
      lastState:
        terminated:
          containerID: docker://d14f4685e3fe54c356b6d92be163fb276e2ebedd7ea8f3d9c36d2d6ddcc08f76
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:16Z"
      name: etcd
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:52Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 192.168.65.4
    podIPs:
    - ip: 192.168.65.4
    qosClass: Burstable
    startTime: "2022-03-18T19:05:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.65.4:6443
      kubernetes.io/config.hash: 3ca039f7ff0c547d271c37587418b712
      kubernetes.io/config.mirror: 3ca039f7ff0c547d271c37587418b712
      kubernetes.io/config.seen: "2022-03-18T19:05:09.112686059Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-03-18T19:05:17Z"
    labels:
      component: kube-apiserver
      tier: control-plane
    name: kube-apiserver-docker-desktop
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: docker-desktop
      uid: 0513d239-83ff-4020-ad23-3d84cffcae09
    resourceVersion: "1258106"
    uid: b8050d29-9d5c-4593-b8b1-cf94fd5f04d2
  spec:
    containers:
    - command:
      - kube-apiserver
      - --advertise-address=192.168.65.4
      - --allow-privileged=true
      - --authorization-mode=Node,RBAC
      - --client-ca-file=/run/config/pki/ca.crt
      - --enable-admission-plugins=NodeRestriction
      - --enable-bootstrap-token-auth=true
      - --etcd-cafile=/run/config/pki/etcd/ca.crt
      - --etcd-certfile=/run/config/pki/apiserver-etcd-client.crt
      - --etcd-keyfile=/run/config/pki/apiserver-etcd-client.key
      - --etcd-servers=https://127.0.0.1:2379
      - --kubelet-client-certificate=/run/config/pki/apiserver-kubelet-client.crt
      - --kubelet-client-key=/run/config/pki/apiserver-kubelet-client.key
      - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
      - --proxy-client-cert-file=/run/config/pki/front-proxy-client.crt
      - --proxy-client-key-file=/run/config/pki/front-proxy-client.key
      - --requestheader-allowed-names=front-proxy-client
      - --requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --secure-port=6443
      - --service-account-issuer=https://kubernetes.default.svc.cluster.local
      - --service-account-key-file=/run/config/pki/sa.pub
      - --service-account-signing-key-file=/run/config/pki/sa.key
      - --service-cluster-ip-range=10.96.0.0/12
      - --tls-cert-file=/run/config/pki/apiserver.crt
      - --tls-private-key-file=/run/config/pki/apiserver.key
      - --watch-cache=false
      image: k8s.gcr.io/kube-apiserver:v1.22.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.65.4
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.65.4
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.65.4
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /run/config/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /run/config/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T17:49:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T17:49:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://e05fd5de56a4c108200accd331ad143e8810a29a0d1238c75c5b513083e7ad77
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-apiserver:v1.22.5
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-apiserver@sha256:c41529f1c371ab7e471927c63cc4fa118cf1afed769e9ffd43e338e259c9e2d7
      lastState:
        terminated:
          containerID: docker://e203db0a5138dfda910e9f827c6e994d86fa4a2d63923365895842d328b28238
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:16Z"
      name: kube-apiserver
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:52Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 192.168.65.4
    podIPs:
    - ip: 192.168.65.4
    qosClass: Burstable
    startTime: "2022-03-31T17:49:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: 1fe1f00ef31eb1efe8731cc2f5b776aa
      kubernetes.io/config.mirror: 1fe1f00ef31eb1efe8731cc2f5b776aa
      kubernetes.io/config.seen: "2022-03-18T19:05:09.112687377Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-03-18T19:05:15Z"
    labels:
      component: kube-controller-manager
      tier: control-plane
    name: kube-controller-manager-docker-desktop
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: docker-desktop
      uid: 0513d239-83ff-4020-ad23-3d84cffcae09
    resourceVersion: "1258094"
    uid: bcd30eb8-3985-40c7-806c-de6f409bdbbd
  spec:
    containers:
    - command:
      - kube-controller-manager
      - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
      - --bind-address=127.0.0.1
      - --client-ca-file=/run/config/pki/ca.crt
      - --cluster-name=kubernetes
      - --cluster-signing-cert-file=/run/config/pki/ca.crt
      - --cluster-signing-key-file=/run/config/pki/ca.key
      - --controllers=*,bootstrapsigner,tokencleaner
      - --horizontal-pod-autoscaler-sync-period=60s
      - --kubeconfig=/etc/kubernetes/controller-manager.conf
      - --leader-elect=false
      - --node-monitor-grace-period=180s
      - --node-monitor-period=30s
      - --port=0
      - --pvclaimbinder-sync-period=60s
      - --requestheader-client-ca-file=/run/config/pki/front-proxy-ca.crt
      - --root-ca-file=/run/config/pki/ca.crt
      - --service-account-private-key-file=/run/config/pki/sa.key
      - --use-service-account-credentials=true
      image: k8s.gcr.io/kube-controller-manager:v1.22.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/ca-certificates
        name: etc-ca-certificates
        readOnly: true
      - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        name: flexvolume-dir
      - mountPath: /run/config/pki
        name: k8s-certs
        readOnly: true
      - mountPath: /etc/kubernetes/controller-manager.conf
        name: kubeconfig
        readOnly: true
      - mountPath: /usr/local/share/ca-certificates
        name: usr-local-share-ca-certificates
        readOnly: true
      - mountPath: /usr/share/ca-certificates
        name: usr-share-ca-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /run/config/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T17:49:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T17:49:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://32d4978ae8871fe503ba6617326d0e4c157c69e61df46535cc31c3556b7df4f1
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-controller-manager:v1.22.5
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-controller-manager@sha256:663dceb6ca61b55a64fe716f6a67cc6bea72c29b31f0a79a5efc5d30bea07180
      lastState:
        terminated:
          containerID: docker://18c8e5304f5ed58a39b3f9e7a55659b8474885d7eb1c563d25e9a70b15cb7484
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:16Z"
      name: kube-controller-manager
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:52Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 192.168.65.4
    podIPs:
    - ip: 192.168.65.4
    qosClass: Burstable
    startTime: "2022-03-31T17:49:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2022-03-18T19:05:19Z"
    generateName: kube-proxy-
    labels:
      controller-revision-hash: "7649476585"
      k8s-app: kube-proxy
      pod-template-generation: "1"
    name: kube-proxy-9gqhs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: c8476313-495d-42b5-bfc1-443044a2322d
    resourceVersion: "1258054"
    uid: 4dea9b27-6769-43b5-9214-2378448953c9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - docker-desktop
    containers:
    - command:
      - /usr/local/bin/kube-proxy
      - --config=/var/lib/kube-proxy/config.conf
      - --hostname-override=$(NODE_NAME)
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: k8s.gcr.io/kube-proxy:v1.22.5
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/kube-proxy
        name: kube-proxy
      - mountPath: /run/xtables.lock
        name: xtables-lock
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-67gpq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: docker-desktop
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-67gpq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:44:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:44:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://3dee7d09319174e8c53a6feb5d18aca45e8a7057c9c6c7fe1f9dee7814ff440f
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-proxy:v1.22.5
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-proxy@sha256:6b4e3c151599bb458f59502648b135ce6f6fda2784c77c4d127c25ed4a57d53c
      lastState:
        terminated:
          containerID: docker://7ed647be989fe5e98d239078115a7cece28be12f578c8f11b644f6e6c4af224d
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:21Z"
      name: kube-proxy
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:58Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 192.168.65.4
    podIPs:
    - ip: 192.168.65.4
    qosClass: BestEffort
    startTime: "2022-03-18T19:05:19Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubernetes.io/config.hash: d19d89767cc69ae3010bc658c1cd2e46
      kubernetes.io/config.mirror: d19d89767cc69ae3010bc658c1cd2e46
      kubernetes.io/config.seen: "2022-03-18T19:05:09.112688297Z"
      kubernetes.io/config.source: file
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2022-03-18T19:05:13Z"
    labels:
      component: kube-scheduler
      tier: control-plane
    name: kube-scheduler-docker-desktop
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: docker-desktop
      uid: 0513d239-83ff-4020-ad23-3d84cffcae09
    resourceVersion: "1258097"
    uid: ad41a6cf-4040-470a-a1d5-327f792d5b84
  spec:
    containers:
    - command:
      - kube-scheduler
      - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
      - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
      - --bind-address=127.0.0.1
      - --kubeconfig=/etc/kubernetes/scheduler.conf
      - --leader-elect=true
      - --port=0
      image: k8s.gcr.io/kube-scheduler:v1.22.5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/scheduler.conf
        name: kubeconfig
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-30T16:26:20Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-30T16:26:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://b977e2cf7b7333f4f3d1078ded2bd05dee18087ecad9d1f7d67d53f5433564b6
      image: hubproxy.docker.internal:5000/docker/desktop-kubernetes-scheduler:v1.22.5
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-kubernetes-scheduler@sha256:96df4d3ff6be2e23395234619e306dec6879acc85748082b3780173ae8d8b5f4
      lastState:
        terminated:
          containerID: docker://320e5439c8e722ab2824e3fcedbc3dff7b00951a38d3bfba24720725c59e476e
          exitCode: 255
          finishedAt: "2022-03-31T20:44:45Z"
          reason: Error
          startedAt: "2022-03-31T17:49:16Z"
      name: kube-scheduler
      ready: true
      restartCount: 8
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:44:52Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 192.168.65.4
    podIPs:
    - ip: 192.168.65.4
    qosClass: Burstable
    startTime: "2022-03-30T16:26:20Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"component":"storage-provisioner"},"name":"storage-provisioner","namespace":"kube-system"},"spec":{"containers":[{"args":["/var/lib/k8s-pvs"],"image":"docker/desktop-storage-provisioner:v2.0","imagePullPolicy":"IfNotPresent","name":"storage-provisioner","volumeMounts":[{"mountPath":"/var/lib/k8s-pvs","name":"pvs"}]}],"serviceAccountName":"storage-provisioner","volumes":[{"hostPath":{"path":"/var/lib/k8s-pvs","type":"Directory"},"name":"pvs"}]}}
    creationTimestamp: "2022-03-18T19:05:46Z"
    labels:
      component: storage-provisioner
    name: storage-provisioner
    namespace: kube-system
    resourceVersion: "1258136"
    uid: 2cea7e62-2879-4568-9aba-886fa3abb54b
  spec:
    containers:
    - args:
      - /var/lib/k8s-pvs
      image: docker/desktop-storage-provisioner:v2.0
      imagePullPolicy: IfNotPresent
      name: storage-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/k8s-pvs
        name: pvs
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-64q52
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: storage-provisioner
    serviceAccountName: storage-provisioner
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/k8s-pvs
        type: Directory
      name: pvs
    - name: kube-api-access-64q52
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-03-31T20:45:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://d9fd84cab438cc883f587a1a9bf9adacae096c1b10fe4f593aadfeedc8a01030
      image: docker/desktop-storage-provisioner:v2.0
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-storage-provisioner@sha256:115d77efe6e256cefbcdf1d3292bede9339ef3952a2a83393cea217a3ffdef36
      lastState:
        terminated:
          containerID: docker://52dc7e9014575828bc150994b0a5e89c1e04e250f39623cd7d421c586d9f4554
          exitCode: 1
          finishedAt: "2022-03-31T20:45:19Z"
          reason: Error
          startedAt: "2022-03-31T20:44:58Z"
      name: storage-provisioner
      ready: true
      restartCount: 9
      started: true
      state:
        running:
          startedAt: "2022-03-31T20:45:34Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.27
    podIPs:
    - ip: 10.1.0.27
    qosClass: BestEffort
    startTime: "2022-03-18T19:05:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"component":"vpnkit-controller"},"name":"vpnkit-controller","namespace":"kube-system"},"spec":{"containers":[{"command":["/kube-vpnkit-forwarder","-path","/run/host-services/backend.sock"],"image":"docker/desktop-vpnkit-controller:v2.0","imagePullPolicy":"IfNotPresent","name":"vpnkit-controller","volumeMounts":[{"mountPath":"/run/host-services/backend.sock","name":"api"}]}],"serviceAccountName":"vpnkit-controller","volumes":[{"hostPath":{"path":"/run/host-services/backend.sock"},"name":"api"}]}}
    creationTimestamp: "2022-03-18T19:05:47Z"
    labels:
      component: vpnkit-controller
    name: vpnkit-controller
    namespace: kube-system
    resourceVersion: "1361308"
    uid: 509b2f50-a636-433e-b3d7-a4a1ec351577
  spec:
    containers:
    - command:
      - /kube-vpnkit-forwarder
      - -path
      - /run/host-services/backend.sock
      image: docker/desktop-vpnkit-controller:v2.0
      imagePullPolicy: IfNotPresent
      name: vpnkit-controller
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/host-services/backend.sock
        name: api
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-68ggs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: docker-desktop
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: vpnkit-controller
    serviceAccountName: vpnkit-controller
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /run/host-services/backend.sock
        type: ""
      name: api
    - name: kube-api-access-68ggs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2022-04-01T19:54:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2022-04-01T19:54:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2022-03-18T19:05:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://581bcfc66f0f654126b808f61c6036e9cde12803c205ec2657d3a8a6e0abd57e
      image: docker/desktop-vpnkit-controller:v2.0
      imageID: docker-pullable://hubproxy.docker.internal:5000/docker/desktop-vpnkit-controller@sha256:b5bcb3a7172ae44d3a1df2e74a1b4d4e10d5562efe1d3c9197b23b383de70a86
      lastState:
        terminated:
          containerID: docker://9b44806bcfed113a02b23ea2c429cb0b1d1904f8c545c1dce60f36d9392b37e5
          exitCode: 2
          finishedAt: "2022-04-01T19:54:27Z"
          reason: Error
          startedAt: "2022-04-01T19:36:44Z"
      name: vpnkit-controller
      ready: true
      restartCount: 1542
      started: true
      state:
        running:
          startedAt: "2022-04-01T19:54:28Z"
    hostIP: 192.168.65.4
    phase: Running
    podIP: 10.1.0.29
    podIPs:
    - ip: 10.1.0.29
    qosClass: BestEffort
    startTime: "2022-03-18T19:05:47Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
